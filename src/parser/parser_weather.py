from random import choice

import datetime

from bs4 import BeautifulSoup as bs
from requests import get


def hourly_weather_forecast():
    """ Returns the hourly forecast for the given weather station """
    now = datetime.datetime.now()
    hours = now.hour

    name = choice(
        ['–°–æ–ª–Ω—ã—à–∫–æ', '–ë—É–ª–æ—á–∫–∞', '–õ–∞–ø–æ—á–∫–∞']
    )

    if 5 < hours < 11:
        answer = choice(
            [f'–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ {name}!', f'–ü—Ä–æ—Å—ã–ø–∞–π—Å—è –º–æ—è {name}!', '–° –¥–æ–±—Ä—ã–π —É—Ç—Ä–æ–º –º–æ–π —Å–æ–ª—ë–Ω–µ–Ω—å–∫–∏–π –∫—Ä–µ–Ω–¥–µ–ª—ë—á–µ–∫!']
        )
    elif 11 < hours < 17:
        answer = choice(
            [f'–î–æ–±—Ä—ã–π –¥–µ–Ω—å {name}!', f'–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –¥–Ω—è {name}!']
        )
    elif 17 < hours < 23:
        answer = choice(
            [f'–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞ {name}!', f'–°–ø–æ–∫–æ–π–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞ {name}!']
        )
    elif 23 < hours < 24 or 0 < hours < 5:
        answer = choice(
            [f'–î–æ–±—Ä–æ–π –Ω–æ—á–∏ {name}!', f'–°–ª–∞–¥–Ω–∏—ä —Å–Ω–æ–≤ {name}!', f'–†–∞—Å—Å–ª–∞–±–ª—è–π—Å—è {name}']
        )
    else:
        answer = f'{name}'

    url = 'https://pogoda.mail.ru/prognoz/novosibirsk/24hours/'
    html = bs(get(url, timeout=5).content, 'html.parser')
    main = html.find(class_='p-forecast__header-inner')

    data = main.find(class_='p-forecast__title').text
    temperature = f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –±–æ—Ä—Ç–æ–º {main.find(class_='p-forecast__temperature-value').text}'
    felt_temperature = f'–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {main.find(class_='p-forecast__data').text}'
    description = f'–ù–∞ —É–ª–∏—Ü–µ {main.find(class_='p-forecast__description').text}'

    if '–æ–±–ª–∞—á–Ω–æ—Å—Ç—å' in description or '–æ–±–ª–∞—á–Ω–æ' in description:
        icon = '‚õÖÔ∏è'
    elif '—è—Å–Ω–æ' in description or '—Å–æ–ª–Ω–µ—á–Ω–æ' in description:
        icon = '‚òÄÔ∏è'
    elif '–≥—Ä–æ–∑–∞' in description:
        icon = '‚õà'
    else:
        icon = 'üåß'

    return data, answer, temperature, felt_temperature, description, icon


def detailed_weather_forecast_for_today():
    url = 'https://pogoda.mail.ru/prognoz/novosibirsk/14dney/#day2'
    html = bs(get(url, timeout=5).content, 'html.parser')
    main = html.find(class_='block block_collapse_top')

    data = main.find(class_='hdr__wrapper').text

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –±–ª–æ–∫–∏ —Å –∫–ª–∞—Å—Å–æ–º 'p-flex__column p-flex__column_percent-16'
    period_blocks = main.find_all(class_='p-flex__column p-flex__column_percent-16')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥—ã
    periods = ['night', 'morning', 'day', 'evening']
    results = {}

    for i, period in enumerate(periods):
        period_block = period_blocks[i]
        temperature = period_block.find(class_='text text_block text_bold_medium margin_bottom_10').text
        felt_temperature = period_block.find(class_='text text_block text_light_normal text_fixed color_gray').text
        description = period_block.find(class_='text text_block text_light_normal text_fixed').text

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–∏—Å–∞–Ω–∏—è
        if '–æ–±–ª–∞—á–Ω–æ—Å—Ç—å' in description or '–æ–±–ª–∞—á–Ω–æ' in description:
            icon = '‚õÖÔ∏è'
        elif '—è—Å–Ω–æ' in description or '—Å–æ–ª–Ω–µ—á–Ω–æ' in description:
            icon = '‚òÄÔ∏è'
        elif '–≥—Ä–æ–∑–∞' in description:
            icon = '‚õà'
        else:
            icon = 'üåß'

        results[period] = {
            'temperature': temperature,
            'felt_temperature': felt_temperature,
            'description': description,
            'icon': icon
        }

    return (data,
            results['night']['temperature'], results['night']['felt_temperature'], results['night']['description'],
            results['night']['icon'],
            results['morning']['temperature'], results['morning']['felt_temperature'],
            results['morning']['description'], results['morning']['icon'],
            results['day']['temperature'], results['day']['felt_temperature'], results['day']['description'],
            results['day']['icon'],
            results['evening']['temperature'], results['evening']['felt_temperature'],
            results['evening']['description'], results['evening']['icon'],
            )
